# Generated by the windmill services transformer
from windmill.authoring import WindmillTestClient
import httplib
import base64
import os
import json

DB_HOST = 'localhost:5985'
DB_NAME = 'hejhej_test'
USER_DB = '_users'
DB_USER = 'alex'
DB_PASSWORD = 'test'

def setup_module(module):
  headers = auth_headers(DB_USER, DB_PASSWORD)
  recreate_db(DB_HOST, DB_NAME, headers)
  os.system("couchapp push test") # push couch app
  delete_user('alexx', headers)

def test_signup():
  client = WindmillTestClient(__name__)
  client.open(url="http://" + DB_HOST + "/" + DB_NAME + u'/_design/hejhej/index.html')
  client.click(link=u'Sign Up')
  client.type(text=u'alexx', id=u'name')
  client.type(text=u'test', id=u'password')
  client.type(text=u'test', id=u'password_confirmation')
  client.click(value=u'Sign Up')
  client.asserts.assertText(xpath=u'//h1', validator=u'Welcome alexx')

def delete_user(name, headers = {}):
  conn = httplib.HTTPConnection(DB_HOST)
  conn.request("GET", "/" + USER_DB + "/org.couchdb.user%3A" + name, {}, headers)
  response = conn.getresponse()
  if(response.status == 200):
    body = response.read()
    _json = json.loads(body)
    rev = _json['_rev']
    httplib.HTTPConnection(DB_HOST).request("DELETE", "/" + USER_DB + "/org.couchdb.user%3A" + name + "?rev=" + rev, {}, headers)

def auth_headers(username, password):
  base64string = base64.encodestring('%s:%s' % (username, password))[:-1]
  authheader =  "Basic %s" % base64string
  return {'Authorization': authheader}

def recreate_db(host, name, headers):
  httplib.HTTPConnection(host).request("DELETE", "/" + name, {}, headers)
  httplib.HTTPConnection(host).request("PUT", "/" + name, {}, headers)
